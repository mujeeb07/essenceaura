<%- include('../layouts/admin/header.ejs') %>
<body>
    <div class="screen-overlay"></div>
    <%- include('../layouts/admin/sidebar.ejs') %>
   
    <main class="main-wrap">
        <%- include('../layouts/admin/navbar.ejs') %>
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Create Sales Report</h2>
                    <p>Whole data about your business here</p>
                </div>
                <div>
                    <button class="btn btn-primary me-3" id="btn-pdf">
                        <i class="text-muted material-icons md-post_add"></i>
                        Download as PDF
                    </button>
                    <button class="btn btn-primary" id="btn-excel">
                        <i class="text-muted material-icons md-post_add"></i>
                        Download as Excel
                    </button>
                </div>
            </div>

            <div class="row">

                <div class="container mt-5">
                    
                    <div class="d-flex flex-wrap align-items-center justify-content-start">
                        <!-- For Select the periods. -->
                        <div class="d-flex flex-column align-items-center me-4">
                            <h6 class="text-center mb-2">Select Period</h6>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-filter"></i>
                                </span>
                                <select id="sales-select" class="form-select">
                                    <option value="daily">Daily</option>
                                    <option value="weekly">Weekly</option>
                                    <option value="monthly">Monthly</option>
                                    <option value="yearly">Yearly</option>
                                </select>
                            </div>
                        </div>
                
                        <!--Fro the Custom Range -->
                        <div class="d-flex flex-column justify-content-space-between m-5">
                            <h6 class="text-center mb-2">Custom Range</h6>
                            <div class="input-group">
                                <p class="align-items-center m-1">From</p>
                                <input type="date" id="start-date" class="m-1 form-control" max="<%= new Date().toISOString().split('T')[0] %>">
                                <p class="align-items-center m-1">To</p>
                                <input type="date" id="end-date" class="form-control" max="<%= new Date().toISOString().split('T')[0] %>">
                            </div>
                        </div>
                    </div>
                </div>
                                
                <div id="sales-table" class="text-center">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h4 class="mb-4" id="report-title">Sales Report</h4>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Product ID</th>
                                            <th>Product Name</th>
                                            <th>Product Brand</th>
                                            <th>Quantity</th>
                                            <th>Revenue</th>
                                        </tr>
                                    </thead>
                                    <tbody id="sales-data">
                                        
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>                
                
            </div>            
        </section>
    </main>
</body>
</html>
<%- include('../layouts/admin/footer.ejs') %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const salesSelect = document.getElementById('sales-select');
        const startDateInput = document.getElementById('start-date');
        const endDateInput = document.getElementById('end-date');
        const salesData = document.getElementById('sales-data');
        const reportTitle = document.getElementById('report-title');

        const fetchData = async (type, startDate, endDate) => {
            try {
                const params = new URLSearchParams({
                    type: type,
                    startDate: startDate,
                    endDate: endDate,
                });

                const response = await fetch(`/admin/sales_report_table?${params.toString()}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (!response.ok) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: `Failed to fetch data: ${response.statusText}`,
                    });
                    return [];
                }

                const data = await response.json();
                return data.report || [];
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong while fetching data. Please try again later.',
                });
                console.error('Error fetching sales report data:', error);
                return [];
            }
        };

        const renderTable = (data) => {
            salesData.innerHTML = '';

            if (data.length > 0) {
                data.forEach(item => {
                    item.products.forEach(product => {
                        const row = `
                            <tr>
                                <td>${item._id}</td>
                                <td>#${product.productId.slice(0,10).toUpperCase() || 'N/A'}</td>
                                <td>${product.productName || 'N/A'}</td>
                                <td>${product.productBrand || 'N/A'}</td>
                                <td>${product.quantity || 0}</td>
                                <td>â‚¹${(product.revenue || 0).toFixed(2)}</td>
                            </tr>
                        `;
                        salesData.innerHTML += row;
                    });
                });
            } else {
                salesData.innerHTML = `<tr><td colspan="6">No data available for the selected period.</td></tr>`;
            }
        };

        const updateTable = async () => {
            const selectedType = salesSelect.value;
            const startDate = startDateInput.value;
            const endDate = endDateInput.value;

            reportTitle.textContent = `${selectedType.charAt(0).toUpperCase() + selectedType.slice(1)} Sales Report`;

            const filteredData = await fetchData(selectedType, startDate, endDate);
            renderTable(filteredData);
        };

        salesSelect.addEventListener('change', updateTable);
        startDateInput.addEventListener('change', updateTable);
        endDateInput.addEventListener('change', updateTable);

        updateTable();
    });


    document.getElementById('btn-excel').addEventListener('click', () => {
        const visibleTable = document.querySelector('#sales-table table');

        if (!visibleTable) {
            Swal.fire({
                icon: 'error',
                title: 'No Data',
                text: 'No table is currently available to export!',
            });
            return;
        }

        const wsData = [];
        visibleTable.querySelectorAll('tr').forEach(tr => {
            const row = [];
            tr.querySelectorAll('th, td').forEach(td => {
                row.push(td.innerText.trim());
            });
            wsData.push(row);
        });

        const wb = XLSX.utils.book_new();
        const ws = XLSX.utils.aoa_to_sheet(wsData);
        XLSX.utils.book_append_sheet(wb, ws, 'Sales Report');

        XLSX.writeFile(wb, 'sales-report.xlsx');

        Swal.fire({
            icon: 'success',
            title: 'Export Successful',
            text: 'The sales report has been exported as an Excel file!',
        });
    });



</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script>

    document.addEventListener('DOMContentLoaded', () => {
        const salesSelect = document.getElementById('sales-select');
        const tables = document.querySelectorAll('.sales-table');

        const showTable = (id) => {
            tables.forEach(table => table.style.display = 'none');
            const selectedTable = document.getElementById(id);
            if (selectedTable) {
                selectedTable.style.display = 'block';
            }
        };

        salesSelect.addEventListener('change', () => {
            const selectedValue = salesSelect.value;
            showTable(selectedValue);
        });

        showTable(salesSelect.value); 
    });

    document.getElementById('btn-pdf').addEventListener('click', () => {
        const visibleTable = document.querySelector('#sales-table');

        if (!visibleTable) {
            Swal.fire({
                icon: 'error',
                title: 'No Table Found',
                text: 'No table is currently available to export!',
            });
            return;
        }

        const tableClone = visibleTable.cloneNode(true);
        tableClone.style.width = '100%';
        tableClone.style.margin = '0 auto';

        const currentDate = new Date();
        const formattedDate = currentDate.toLocaleDateString();
        const formattedTime = currentDate.toLocaleTimeString();

        const header = document.createElement('div');
        header.style.display = 'flex';
        header.style.justifyContent = 'space-between';
        header.style.marginBottom = '20px';
        header.style.fontSize = '14px';
        header.style.fontWeight = 'bold';
        header.innerHTML = `
            <span>EssenceAura</span>
            <span>${formattedDate} ${formattedTime}</span>
        `;

        const pdfContainer = document.createElement('div');
        pdfContainer.style.width = '210mm'; 
        pdfContainer.style.padding = '10mm';
        pdfContainer.style.boxSizing = 'border-box';
        pdfContainer.style.fontSize = '12px'; 
        pdfContainer.appendChild(header);
        pdfContainer.appendChild(tableClone);

        const options = {
            margin: 0,
            filename: 'sales-report.pdf',
            html2canvas: { scale: 2, useCORS: true },
            jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
        };

        html2pdf()
            .set(options)
            .from(pdfContainer)
            .save()
            .then(() => {
                Swal.fire({
                    icon: 'success',
                    title: 'Export Successful',
                    text: 'The sales report has been successfully exported as a PDF!',
                });
            })
            .catch((error) => {
                console.error('PDF Export Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Export Failed',
                    text: 'An error occurred while exporting the PDF. Please try again.',
                });
            });
    });


</script>

