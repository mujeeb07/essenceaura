<%- include('../layouts/user/header.ejs') %>
<link rel="stylesheet" href="/user_asset/css/main.css?v=3.4"> 

<div class="container">
    <div class="container mt-30 mb-30">
            <h2>Edit Address</h2>
        <form id="editAddressForm" action="/edit_address/<%= address._id %>" method="POST">
            <input type="hidden" name="id" value="<%= address._id %>" />
            <input type="hidden" name="redirect_to" value="<%= redirect_to %>" />
            
            <div class="row">
                <div class="col-md-6 mb-3">
                <label for="name" class="form-label">Full Name</label>
                <input type="text" class="form-control" name="name" value="<%= address.name %>" required>
                <input class="form-control" type="hidden" name="id" value="<%= address._id %>" >
                <div class="invalid-feedback" id="nameError">Please enter a valid name.</div>
                </div>
                <div class="col-md-6 mb-3">
                <label for="mobile" class="form-label">Mobile Number</label>
                <input type="text" class="form-control" id="mobile" name="mobile" value="<%= address.mobile %>" required>
                <div class="invalid-feedback" id="mobileError">Please enter a valid 10-digit mobile number.</div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 mb-3">
                    <label for="address" class="form-label">Address</label>
                    <input type="text" class="form-control" id="address" name="address" value="<%= address.address %>" required>
                    <div class="invalid-feedback" id="addressError">
                        Please enter a valid address.
                    </div>
                </div>

                <div class="col-md-6 mb-3">
                    <label for="city" class="form-label">City</label>
                    <input type="text" class="form-control" id="city" name="city" value="<%= address.city %>" required>
                    <div class="invalid-feedback" id="cityError">
                        Please enter a valid city.
                    </div>
                </div>

                <% const states = [
                "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chhattisgarh", "Goa", "Gujarat", "Haryana", 
                "Himachal Pradesh", "Jharkhand", "Karnataka", "Kerala", "Madhya Pradesh", "Maharashtra", "Manipur", 
                "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Punjab", "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", 
                "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "Andaman and Nicobar Islands", "Chandigarh", 
                "Dadra and Nagar Haveli", "Daman and Diu", "Lakshadweep", "Delhi", "Puducherry", "Ladakh", "Jammu and Kashmir"
            ]; %>
            
            <div class="col-md-6 mb-3">
                <label for="state" class="form-label">State</label>
                <select class="form-select" id="state" name="state" required>
                <option value="">Select a state</option>
                <% states.forEach(function(state) { %>
                    <option value="<%= state %>" <%= address.state === state ? "selected" : "" %>><%= state %></option>
                <% }); %>
                </select>
                <div class="invalid-feedback" id="stateError">Please select your state.</div>
            </div>
                
                <div class="col-md-6 mb-3">
                    <label for="postal_code" class="form-label">Postal Code</label>
                    <input type="text" class="form-control" id="postal_code" name="postal_code" value="<%= address.postal_code %>" required>
                    <div class="invalid-feedback" id="postalCodeError">
                        Please enter a valid postal code.
                    </div>
                </div>

                <div class="col-md-6 mb-3">
                    <label for="landmark" class="form-label">Landmark</label>
                    <input type="text" class="form-control" id="landmark" name="landmark" value="<%= address.landmark %>" required>
                    <div class="invalid-feedback" id="landmarkError">
                        Please enter a landmark.
                    </div>
                </div>
            </div>
        
            <div class="row mt-4">
                <div class="col-md-12 text-center">
                    <button id="editAddressSubmit" type="submit" class="btn btn-primary">Update Address</button>
                    <a href="/<%= redirect_to %>" class="btn btn-secondary ms-3">Cancel</a>
                </div>
            </div>
        </form>
    </div>
</div>
    
  


<%- include('../layouts/user/footer.ejs') %>

<script>
        document.addEventListener("DOMContentLoaded", function () {
        const editForm = document.getElementById("editAddressForm");
        const nameInput = document.querySelector("input[name='name']");
        const addressInput = document.getElementById("address");
        const cityInput = document.getElementById("city");
        const stateInput = document.getElementById("state");
        const mobileInput = document.getElementById("mobile");
        const postalCodeInput = document.getElementById("postal_code");
        const landmarkInput = document.getElementById("landmark");
        const submitButton = document.getElementById("editAddressSubmit");

        
        const patterns = {
            name: /^[a-zA-Z\s]+$/, 
            mobile: /^[0-9]{10}$/,
            postalCode: /^[0-9]{6}$/,
            city: /^[a-zA-Z\s]+$/, 
            address: /^[a-zA-Z0-9\s,.-]+$/, 
            landmark: /^[a-zA-Z0-9\s,.-]+$/ 
        };

        const errorMessages = {
            name: "Please enter a valid name (letters only, no special characters)",
            mobile: "Please enter a valid 10-digit mobile number",
            postalCode: "Please enter a valid 6-digit postal code",
            city: "Please enter a valid city name ",
            address: "Please enter a valid address",
            landmark: "Please enter a valid landmark",
            state: "Please select your state"
        };

        function validateInput(input, pattern, errorId) {
            const value = input.value.trim();
            let isValid = true;

            if (pattern) {
                isValid = pattern.test(value);
            } else {
                isValid = value !== "";
            }

            input.classList.toggle("is-invalid", !isValid);
            const errorElement = document.getElementById(errorId);
            if (errorElement) {
                errorElement.style.display = isValid ? "none" : "block";
                errorElement.textContent = errorMessages[input.name] || "Please Enter a Valid Data";
            }

            return isValid;
        }

        function validateForm() {
            const validations = [
                validateInput(nameInput, patterns.name, "nameError"),
                validateInput(mobileInput, patterns.mobile, "mobileError"),
                validateInput(addressInput, patterns.address, "addressError"),
                validateInput(cityInput, patterns.city, "cityError"),
                validateInput(stateInput, null, "stateError"),
                validateInput(postalCodeInput, patterns.postalCode, "postalCodeError"),
                validateInput(landmarkInput, patterns.landmark, "landmarkError")
            ];

            const isFormValid = validations.every(validation => validation === true);
            submitButton.disabled = !isFormValid;
            return isFormValid;
        }

        const inputs = [nameInput, addressInput, cityInput, stateInput, mobileInput, postalCodeInput, landmarkInput];
        inputs.forEach(input => {
            input.addEventListener("input", function() {
                const errorId = this.id + "Error";
                const pattern = patterns[this.name];
                validateInput(this, pattern, errorId);
                validateForm();
            });

            
            input.addEventListener("blur", function() {
                const errorId = this.id + "Error";
                const pattern = patterns[this.name];
                validateInput(this, pattern, errorId);
                validateForm();
            });
        });

        editForm.addEventListener("submit", function (event) {
            event.preventDefault();
            
            if (validateForm()) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Your address has been updated successfully!',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    this.submit();
                });
            }
        });
    });
</script>